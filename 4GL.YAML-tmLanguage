---
# Properties
name: 4GL
scopeName: source.4gl
fileTypes: [ 4gl, 4GL ]
uuid: 8faf6be5-5e96-4a45-bca7-7f0387a04215

# Patterns
patterns:
  - include: "#comment"
  - include: "#string"
  - include: '#numeric-literal'

repository:
  # Comments
  comment:
    patterns:
      - include: '#document-block-comment'
      - include: '#block-comment'
      - include: '#single-line-comment-double-dash'
      - include: '#single-line-comment-number-sign'

  # Document block comment (#+)
  document-block-comment:
    name: comment.block.documentation.4gl
    begin: (\#\+)
    beginCaptures:
      '1': { name: punctuation.definition.comment.4gl }
    end: ^(?!\s*\#\+)

  # Single line comment (--)
  single-line-comment-double-dash:
    name: comment.line.double-dash.4gl
    begin: (^[ \t]+)?(--)
    beginCaptures:
      '1': { name: punctuation.whitespace.comment.leading.4gl }
      '2': { name: punctuation.definition.comment.4gl }
    end: (?=$)

  # Single line comment (#)
  single-line-comment-number-sign:
    name: comment.line.number-sign.4gl
    begin: (^[ \t]+)?(#(?!\+))
    beginCaptures:
      '1': { name: punctuation.whitespace.comment.leading.4gl }
      '2': { name: punctuation.definition.comment.4gl }
    end: (?=$)

  # Block comment ({ })
  block-comment:
    name: comment.block.4gl
    begin: (\{)
    beginCaptures:
      '1': { name: punctuation.definition.comment.4gl }
    end: (\})
    endCaptures:
      '1': { name: punctuation.definition.comment.4gl }

  string:
    patterns:
      - include: '#single-quote-string'
      - include: '#double-quote-string'
      - include: '#backtick-string'

  single-quote-string:
    name: string.quoted.single.4gl
    begin: "%?'"
    beginCaptures:
      '0': { name: punctuation.definition.string.begin.4gl }
    end: "'(?!')"
    endCaptures:
      '0': { name: punctuation.definition.string.end.4gl }
    patterns:
      - include: '#string-character-escape'
      - name: constant.character.escape.4gl
        match: \'\'

  double-quote-string:
    name: string.quoted.double.4gl
    begin: '%?"'
    beginCaptures:
      '0': { name: punctuation.definition.string.begin.4gl }
    end: '"(?!")'
    endCaptures:
      '0': { name: punctuation.definition.string.end.4gl }
    patterns:
      - include: '#string-character-escape'
      - name: constant.character.escape.4gl
        match: \"\"

  backtick-string:
    name: string.quoted.other.backtick.4gl
    begin: '%?`'
    beginCaptures:
      '0': { name: punctuation.definition.string.begin.4gl }
    end: '`'
    endCaptures:
      '0': { name: punctuation.definition.string.end.4gl }

  string-character-escape:
    name: constant.character.escape.4gl
    match: \\(x[0-9a-fA-F]{2}|.)

  numeric-literal:
    # Could capture decimal point in the future
    name: constant.numeric.decimal.4gl
    match: |-
      (?x)(?:
        (?:\b[0-9]+(\.)[0-9]+[eE][+-]?[0-9]+\b) | # 1.1E+3
        (?:\b[0-9]+(\.)[eE][+-]?[0-9]+\b)       | # 1.E+3
        (?:\B(\.)[0-9]+[eE][+-]?[0-9]+\b)       | # .1E+3
        (?:\b[0-9]+[eE][+-]?[0-9]+\b)           | # 1E+3
        (?:\b[0-9]+(\.)[0-9]+\b)                | # 1.1
        (?:\b[0-9]+(\.)\B)                      | # 1.
        (?:\B(\.)[0-9]+\b)                      | # .1
        (?:\b[0-9]+\b(?!\.))                      # 1
      )